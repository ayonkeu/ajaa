<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<description><![CDATA[ayonkeu ajaa]]></description>
	<display-name>ajaa</display-name>

	<!-- //// -->
	<!-- ZK -->
	<listener>
		<description>ZK listener for session cleanup</description>
		<listener-class>org.zkoss.zk.ui.http.HttpSessionListener</listener-class>
	</listener>
	<servlet>
		<description>ZK loader for ZUML pages</description>
		<servlet-name>zkLoader</servlet-name>
		<servlet-class>org.zkoss.zk.ui.http.DHtmlLayoutServlet</servlet-class>

		<!-- Must. Specifies URI of the update engine (DHtmlUpdateServlet). It 
			must be the same as <url-pattern> for the update engine. -->
		<init-param>
			<param-name>update-uri</param-name>
			<param-value>/zkau</param-value>
		</init-param>
		<!-- Optional. Specifies whether to compress the output of the ZK loader. 
			It speeds up the transmission over slow Internet. However, if you configure 
			a filter to post-processing the output, you might have to disable it. Default: 
			true <init-param> <param-name>compress</param-name> <param-value>true</param-value> 
			</init-param> -->
		<!-- [Optional] Specifies the default log level: OFF, ERROR, WARNING, INFO, 
			DEBUG and FINER. If not specified, the system default is used. -->
		<init-param>
			<param-name>log-level</param-name>
			<param-value>DEBUG</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup><!-- Must -->
	</servlet>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zul</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>zkLoader</servlet-name>
		<url-pattern>*.zhtml</url-pattern>
	</servlet-mapping>
	<!-- [Optional] Uncomment it if you want to use richlets. <servlet-mapping> 
		<servlet-name>zkLoader</servlet-name> <url-pattern>/zk/*</url-pattern> </servlet-mapping> -->
	<servlet>
		<description>The asynchronous update engine for ZK</description>
		<servlet-name>auEngine</servlet-name>
		<servlet-class>org.zkoss.zk.au.http.DHtmlUpdateServlet</servlet-class>

		<!-- [Optional] Specifies whether to compress the output of the ZK loader. 
			It speeds up the transmission over slow Internet. However, if your server 
			will do the compression, you might have to disable it. Default: true<init-param> 
			<param-name>compress</param-name> <param-value>true</param-value> </init-param> -->
		<!-- [Optional] Specifies the AU extension for particular prefix. <init-param> 
			<param-name>extension0</param-name> <param-value>/upload=com.my.MyUploader</param-value> 
			</init-param> -->
	</servlet>
	<servlet-mapping>
		<servlet-name>auEngine</servlet-name>
		<url-pattern>/zkau/*</url-pattern>
	</servlet-mapping>

	<!-- /////////// -->
	<!-- [Optional] Session timeout -->
	<session-config>
		<session-timeout>10</session-timeout>
	</session-config>

	<!--welcome-file-list> <welcome-file>index.zul</welcome-file> </welcome-file-list -->

	<welcome-file-list>
		<welcome-file>index.zul</welcome-file>
	</welcome-file-list>

	<!--context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener-->
	<!--listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping-->

	<!-- For using web scoped bean -->
	<!--listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping-->

</web-app>
